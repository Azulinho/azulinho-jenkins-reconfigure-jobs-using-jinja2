---

- name: Create job directories
  file: path=/var/lib/jenkins/jobs/{{ item.key }}
    state=directory
    mode=0775
    owner=jenkins
    group=jenkins
  with_dict: azulinho_jenkins_reconfigure_jobs_using_jinja2['jobs']
  tags:
    - deploy_jenkins_xml
    - jenkins-reconfigure-jobs-using-jinja2

- name: Deploy Jobs XML
  template: dest=/var/lib/jenkins/jobs/{{item.key}}/config.xml
    src=job.xml.j2
    mode=0775
    owner=jenkins
    group=jenkins
  with_dict: azulinho_jenkins_reconfigure_jobs_using_jinja2['jobs']
  tags:
    - deploy_jenkins_xml
    - jenkins-reconfigure-jobs-using-jinja2

- name: gather list of seed jobs
  shell: ls /var/lib/jenkins/jobs/
  register: _seed_jinja2_jobs
  tags:
    - deploy_jenkins_xml
    - jenkins-reconfigure-jobs-using-jinja2

- name: upload new job and ignore errors if it already exists
  command: 'curl -X POST "http://localhost:8080/createItem?name={{item}}" --data-binary "@/var/lib/jenkins/jobs/{{item}}/config.xml" -H "Content-Type: text/xml"'
  with_items: "{{ _seed_jinja2_jobs.stdout_lines }}"
  tags:
    - deploy_jenkins_xml
    - jenkins-reconfigure-jobs-using-jinja2

- name: update jobs if they already exist
  command: 'curl -X POST "http://localhost:8080/job/{{item}}/config.xml" --data-binary "@/var/lib/jenkins/jobs/{{item}}/config.xml" -H "Content-Type: text/xml"'
  with_items: "{{ _seed_jinja2_jobs.stdout_lines }}"
  tags:
    - deploy_jenkins_xml
    - jenkins-reconfigure-jobs-using-jinja2

